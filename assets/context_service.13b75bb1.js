import{o as e,c as l,b as t,e as n,r as a,l as i,u as o}from"./vendor.1180558b.js";var r="/assets/linkis-contextservice-01.3cb67fd1.png",s="/assets/linkis-contextservice-02.321a8427.png";const u={class:"markdown-body"},d=[t("h2",null,[t("strong",null,"Background")],-1),t("h3",null,[t("strong",null,"What is Context")],-1),t("p",null,"All necessary information to keep a certain operation going on. For example: reading three books at the same time, the page number of each book has been turned is the context of continuing to read the book.",-1),t("h3",null,[t("strong",null,"Why do you need CS (Context Service)?")],-1),t("p",null,"CS is used to solve the problem of data and information sharing across multiple systems in a data application development process.",-1),t("p",null,"For example, system B needs to use a piece of data generated by system A. The usual practice is as follows:",-1),t("ol",null,[t("li",null,[t("p",null,"B system calls the data access interface developed by A system;")]),t("li",null,[t("p",null,"System B reads the data written by system A into a shared storage.")])],-1),t("p",null,"With CS, the A and B systems only need to interact with the CS, write the data and information that need to be shared into the CS, and read the data and information that need to be read from the CS, without the need for an external system to develop and adapt. , Which greatly reduces the call complexity and coupling of information sharing between systems, and makes the boundaries of each system clearer.",-1),t("h2",null,[t("strong",null,"Product Range")],-1),t("p",null,[t("img",{src:r,alt:""})],-1),t("h3",null,"Metadata context",-1),t("p",null,"The metadata context defines the metadata specification.",-1),t("p",null,"Metadata context relies on data middleware, and its main functions are as follows:",-1),t("ol",null,[t("li",null,[t("p",null,"Open up the relationship with the data middleware, and get all user metadata information (including Hive table metadata, online database table metadata, and other NOSQL metadata such as HBase, Kafka, etc.)")]),t("li",null,[t("p",null,"When all nodes need to access metadata, including existing metadata and metadata in the application template, they must go through the metadata context. The metadata context records all metadata information used by the application template.")]),t("li",null,[t("p",null,"The new metadata generated by each node must be registered with the metadata context.")]),t("li",null,[t("p",null,"When the application template is extracted, the metadata context is abstracted for the application template (mainly, the multiple library tables used are made into ${db}. tables to avoid data permission problems) and all dependent metadata information is packaged.")])],-1),t("p",null,"Metadata context is the basis of interactive workflows and the basis of application templates. Imagine: When Widget is defined, how to know the dimensions of each indicator defined by DataWrangler? How does Qualitis verify the graph report generated by Widget?",-1),t("h3",null,"Data context",-1),t("p",null,"The data context defines the data specification.",-1),t("p",null,"The data context depends on data middleware and Linkis computing middleware. The main functions are as follows:",-1),t("ol",null,[t("li",null,[t("p",null,"Get through the data middleware and get all user data information.")]),t("li",null,[t("p",null,"Get through the computing middleware and get the data storage information of all nodes.")]),t("li",null,[t("p",null,"When all nodes need to write temporary results, they must pass through the data context and be uniformly allocated by the data context.")]),t("li",null,[t("p",null,"When all nodes need to access data, they must pass the data context.")]),t("li",null,[t("p",null,"The data context distinguishes between dependent data and generated data. When the application template is extracted, all dependent data is abstracted and packaged for the application template.")])],-1),t("h3",null,"Resource context",-1),t("p",null,"The resource context defines the resource specification.",-1),t("p",null,"The resource context mainly interacts with Linkis computing middleware. The main functions are as follows:",-1),t("ol",null,[t("li",null,[t("p",null,"User resource files (such as Jar, Zip files, properties files, etc.)")]),t("li",null,[t("p",null,"User UDF")]),t("li",null,[t("p",null,"User algorithm package")]),t("li",null,[t("p",null,"User script")])],-1),t("h3",null,"Environmental context",-1),t("p",null,"The environmental context defines the environmental specification.",-1),t("p",null,"The main functions are as follows:",-1),t("ol",null,[t("li",null,[t("p",null,"Operating System")]),t("li",null,[t("p",null,"Software, such as Hadoop, Spark, etc.")]),t("li",null,[t("p",null,"Package dependencies, such as Mysql-JDBC.")])],-1),t("h3",null,"Object context",-1),t("p",null,"The runtime context is all the context information retained when the application template (workflow) is defined and executed.",-1),t("p",null,"It is used to assist in defining the workflow/application template, prompting and perfecting all necessary information when the workflow/application template is executed.",-1),t("p",null,"The runtime workflow is mainly used by Linkis.",-1),t("h2",null,[t("strong",null,"CS Architecture Diagram")],-1),t("p",null,[t("img",{src:s,alt:""})],-1),t("h2",null,[t("strong",null,"Architecture Description:")],-1),t("h3",null,"1. Client",-1),t("p",null,"The entrance of external access to CS, Client module provides HA function; [Enter Client Architecture Design] (ContextService_Client.md)",-1),t("h3",null,"2. Service Module",-1),t("p",null,"Provide a Restful interface to encapsulate and process CS requests submitted by the client; [Enter Service Architecture Design] (ContextService_Service.md)",-1),t("h3",null,"3. ContextSearch",-1),t("p",null,[n("The context query module provides rich and powerful query capabilities for the client to find the key-value key-value pairs of the context; "),t("a",{href:"ContextService_Search.md"},"Enter ContextSearch architecture design")],-1),t("h3",null,"4. Listener",-1),t("p",null,[n("The CS listener module provides synchronous and asynchronous event consumption capabilities, and has the ability to notify the Client in real time once the Zookeeper-like Key-Value is updated; "),t("a",{href:"ContextService_Listener.md"},"Enter Listener architecture design")],-1),t("h3",null,"5. ContextCache",-1),t("p",null,"The context memory cache module provides the ability to quickly retrieve the context and the ability to monitor and clean up JVM memory usage; [Enter ContextCache architecture design] (ContextService_Cache.md)",-1),t("h3",null,"6. HighAvailable",-1),t("p",null,[n("Provide CS high availability capability; "),t("a",{href:"ContextService_HighAvailable.md"},"Enter HighAvailable architecture design")],-1),t("h3",null,"7. Persistence",-1),t("p",null,[n("The persistence function of CS; "),t("a",{href:"ContextService_Persistence.md"},"Enter Persistence architecture design")],-1)],c={setup:(t,{expose:n})=>(n({frontmatter:{}}),(t,n)=>(e(),l("div",u,d)))},h={class:"markdown-body"},p=[t("h2",null,[t("strong",null,"背景")],-1),t("h3",null,[t("strong",null,"什么是上下文Context？")],-1),t("p",null,"保持某种操作继续进行的所有必需信息。如：同时看三本书，每本书已翻看的页码就是继续看这本书的上下文。",-1),t("h3",null,[t("strong",null,"为什么需要CS（Context Service）？")],-1),t("p",null,"CS，用于解决一个数据应用开发流程，跨多个系统间的数据和信息共享问题。",-1),t("p",null,"例如，B系统需要使用A系统产生的一份数据，通常的做法如下：",-1),t("ol",null,[t("li",null,[t("p",null,"B系统调用A系统开发的数据访问接口；")]),t("li",null,[t("p",null,"B系统读取A系统写入某个共享存储的数据。")])],-1),t("p",null,"有了CS之后，A和B系统只需要与CS交互，将需要共享的数据和信息写入到CS，需要读取的数据和信息从CS中读出即可，无需外部系统两两开发适配，极大降低了系统间信息共享的调用复杂度和耦合度，使各系统的边界更加清晰。",-1),t("h2",null,[t("strong",null,"产品范围")],-1),t("p",null,[t("img",{src:r,alt:""})],-1),t("h3",null,"元数据上下文",-1),t("p",null,"元数据上下文定义元数据规范。",-1),t("p",null,"元数据上下文依托于数据中间件，主要功能如下：",-1),t("ol",null,[t("li",null,[t("p",null,"打通与数据中间件的关系，能拿到所有的用户元数据信息（包括Hive表元数据、线上库表元数据、其他NOSQL如HBase、Kafka等元数据）")]),t("li",null,[t("p",null,"所有节点需要访问元数据时，包括已有元数据和应用模板内元数据，都必须经过元数据上下文。元数据上下文记录了应用模板所使用的所有元数据信息。")]),t("li",null,[t("p",null,"各节点所产生的新元数据，都必须往元数据上下文注册。")]),t("li",null,[t("p",null,"抽出应用模板时，元数据上下文为应用模板抽象（主要是将用到的多个库表做成${db}.表形式，避免数据权限问题）和打包所有依赖的元数据信息。")])],-1),t("p",null,"元数据上下文是交互式工作流的基础，也是应用模板的基础。设想：Widget定义时，如何知道DataWrangler定义的各指标维度？Qualitis如何校验Widget产生的图报表？",-1),t("h3",null,"数据上下文",-1),t("p",null,"数据上下文定义数据规范。",-1),t("p",null,"数据上下文依赖于数据中间件和Linkis计算中间件。主要功能如下：",-1),t("ol",null,[t("li",null,[t("p",null,"打通数据中间件，拿到所有用户数据信息。")]),t("li",null,[t("p",null,"打通计算中间件，拿到所有节点的数据存储信息。")]),t("li",null,[t("p",null,"所有节点需要写临时结果时，必须通过数据上下文，由数据上下文统一分配。")]),t("li",null,[t("p",null,"所有节点需要访问数据时，必须通过数据上下文。")]),t("li",null,[t("p",null,"数据上下文会区分依赖数据和生成数据，在抽出应用模板时，为应用模板抽象和打包所有依赖的数据。")])],-1),t("h3",null,"资源上下文",-1),t("p",null,"资源上下文定义资源规范。",-1),t("p",null,"资源上下文主要与Linkis计算中间件交互。主要功能如下：",-1),t("ol",null,[t("li",null,[t("p",null,"用户资源文件（如Jar、Zip文件、properties文件等）")]),t("li",null,[t("p",null,"用户UDF")]),t("li",null,[t("p",null,"用户算法包")]),t("li",null,[t("p",null,"用户脚本")])],-1),t("h3",null,"环境上下文",-1),t("p",null,"环境上下文定义环境规范。",-1),t("p",null,"主要功能如下：",-1),t("ol",null,[t("li",null,[t("p",null,"操作系统")]),t("li",null,[t("p",null,"软件，如Hadoop、Spark等")]),t("li",null,[t("p",null,"软件包依赖，如Mysql-JDBC。")])],-1),t("h3",null,"对象上下文",-1),t("p",null,"运行时上下文为应用模板（工作流）在定义和执行时，所保留的所有上下文信息。",-1),t("p",null,"它用于协助定义工作流/应用模板，在工作流/应用模板执行时提示和完善所有必要信息。",-1),t("p",null,"运行时工作流主要是Linkis使用。",-1),t("h2",null,[t("strong",null,"CS架构图")],-1),t("p",null,[t("img",{src:s,alt:""})],-1),t("h2",null,[t("strong",null,"架构说明：")],-1),t("h3",null,"1. Client",-1),t("p",null,[n("外部访问CS的入口，Client模块提供HA功能； "),t("a",{href:"ContextService_Client.md"},"进入Client架构设计")],-1),t("h3",null,"2. Service模块",-1),t("p",null,[n("提供Restful接口，封装和处理客户端提交的CS请求； "),t("a",{href:"ContextService_Service.md"},"进入Service架构设计")],-1),t("h3",null,"3. ContextSearch",-1),t("p",null,[n("上下文查询模块，提供丰富和强大的查询能力，供客户端查找上下文的Key-Value键值对； "),t("a",{href:"ContextService_Search.md"},"进入ContextSearch架构设计")],-1),t("h3",null,"4. Listener",-1),t("p",null,[n("CS的监听器模块，提供同步和异步的事件消费能力，具备类似Zookeeper的Key-Value一旦更新，实时通知Client的能力； "),t("a",{href:"ContextService_Listener.md"},"进入Listener架构设计")],-1),t("h3",null,"5. ContextCache",-1),t("p",null,[n("上下文的内存缓存模块，提供快速检索上下文的能力和对JVM内存使用的监听和清理能力； "),t("a",{href:"ContextService_Cache.md"},"进入ContextCache架构设计")],-1),t("h3",null,"6. HighAvailable",-1),t("p",null,[n("提供CS高可用能力； "),t("a",{href:"ContextService_HighAvailable.md"},"进入HighAvailable架构设计")],-1),t("h3",null,"7. Persistence",-1),t("p",null,[n("CS的持久化功能； "),t("a",{href:"ContextService_Persistence.md"},"进入Persistence架构设计")],-1)],m={setup:(t,{expose:n})=>(n({frontmatter:{}}),(t,n)=>(e(),l("div",h,p)))},f={setup(l){const t=a(localStorage.getItem("locale")||"en");return(l,n)=>"en"===t.value?(e(),i(o(c),{key:0})):(e(),i(o(m),{key:1}))}};export{f as default};
