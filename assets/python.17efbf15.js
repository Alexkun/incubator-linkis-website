import{_ as n}from"./jdbc-conf.7cf06ba9.js";import{o as t,c as e,b as o,e as l,r as i,l as h,u}from"./vendor.1180558b.js";var a="/assets/python-run.25fd075c.png";const s={class:"markdown-body"},p=[o("h1",null,"Python engine usage documentation",-1),o("p",null,"This article mainly introduces the configuration, deployment and use of the Python engine in Linkis1.0.",-1),o("h2",null,"1. Environment configuration before using Python engine",-1),o("p",null,"If you want to use the python engine on your server, you need to ensure that the python execution directory and execution permissions are in the user’s PATH.",-1),o("table",null,[o("thead",null,[o("tr",null,[o("th",null,"Environment variable name"),o("th",null,"Environment variable content"),o("th",null,"Remarks")])]),o("tbody",null,[o("tr",null,[o("td",null,"python"),o("td",null,"python execution environment"),o("td",null,"Anaconda’s python executor is recommended")])])],-1),o("p",null,"Table 1-1 Environmental configuration list",-1),o("h2",null,"2. Python engine configuration and deployment",-1),o("h3",null,"2.1 Python version selection and compilation",-1),o("p",null,"Python supports python2 and For python3, you can simply change the configuration to complete the Python version switch, without recompiling the python engine version.",-1),o("h3",null,"2.2 python engineConn deployment and loading",-1),o("p",null,"Here you can use the default loading method to be used normally.",-1),o("h3",null,"2.3 tags of python engine",-1),o("p",null,"Here you can use the default dml.sql to insert it and it can be used normally.",-1),o("h2",null,"3. Use of Python engine",-1),o("h3",null,"Ready to operate",-1),o("p",null,"Before submitting python on linkis, you only need to make sure that there is python path in your user’s PATH.",-1),o("h3",null,"3.1 How to use Scriptis",-1),o("p",null,"The way to use Scriptis is the simplest. You can directly enter Scriptis, right-click the directory and create a new python script, write python code and click Execute.",-1),o("p",null,"The execution logic of python is to start a python through Py4j Gateway, and then the Python engine submits the code to the python executor for execution.",-1),o("p",null,[o("img",{src:a,alt:""})],-1),o("p",null,"Figure 3-1 Screenshot of the execution effect of python",-1),o("h3",null,"3.2 How to use workflow",-1),o("p",null,"The DSS workflow also has a python node, you can drag into the workflow node, then double-click to enter and edit the code, and then execute it in the form of a workflow.",-1),o("h3",null,"3.3 How to use Linkis Client",-1),o("p",null,[l("Linkis also provides a client method to call spark tasks, the call method is through the SDK provided by LinkisClient. We provide java and scala two ways to call, the specific usage can refer to <"),o("a",{href:"https://github.com/WeBankFinTech/Linkis/wiki/Linkis1.0%E7%94%A8%E6%88%B7%E4"},"https://github.com/WeBankFinTech/Linkis/wiki/Linkis1.0用户�"),l(" %BD%BF%E7%94%A8%E6%96%87%E6%A1%A3>.")],-1),o("h2",null,"4. Python engine user settings",-1),o("p",null,"In addition to the above engine configuration, users can also make custom settings, such as the version of python and some modules that python needs to load.",-1),o("p",null,[o("img",{src:n,alt:""})],-1),o("p",null,"Figure 4-1 User-defined configuration management console of python",-1)],r={setup:(n,{expose:o})=>(o({frontmatter:{}}),(n,o)=>(t(),e("div",s,p)))},y={class:"markdown-body"},c=[o("h1",null,"Python 引擎使用文档",-1),o("p",null,"本文主要介绍在Linkis1.0中，Python引擎的配置、部署和使用。",-1),o("h2",null,"1.Spark引擎使用前的环境配置",-1),o("p",null,"如果您希望在您的服务器上使用python引擎，您需要保证用户的PATH中是有python的执行目录和执行权限。",-1),o("table",null,[o("thead",null,[o("tr",null,[o("th",null,"环境变量名"),o("th",null,"环境变量内容"),o("th",null,"备注")])]),o("tbody",null,[o("tr",null,[o("td",null,"python"),o("td",null,"python执行环境"),o("td",null,"建议使用anaconda的python执行器")])])],-1),o("p",null,"表1-1 环境配置清单",-1),o("h2",null,"2.Python引擎的配置和部署",-1),o("h3",null,"2.1 Python版本的选择和编译",-1),o("p",null,"Python是支持python2 和 python3的，您可以简单更改配置就可以完成Python版本的切换，不需要重新编译python的引擎版本。",-1),o("h3",null,"2.2 python engineConn部署和加载",-1),o("p",null,"此处可以使用默认的加载方式即可正常使用。",-1),o("h3",null,"2.3 python引擎的标签",-1),o("p",null,"此处可以使用默认的dml.sql进行插入即可正常使用。",-1),o("h2",null,"3.Python引擎的使用",-1),o("h3",null,"准备操作",-1),o("p",null,"在linkis上提交python之前，您只需要保证您的用户的$PATH中有python的路径即可。",-1),o("h3",null,"3.1 Scriptis的使用方式",-1),o("p",null,"Scriptis的使用方式是最简单的，您可以直接进入Scriptis，右键目录然后新建python脚本并编写python代码并点击执行。",-1),o("p",null,"python的执行逻辑是通过 Py4j的方式，启动一个的python 的gateway，然后Python引擎将代码提交到python的执行器进行执行。",-1),o("p",null,[o("img",{src:a,alt:""})],-1),o("p",null,"图3-1 python的执行效果截图",-1),o("h3",null,"3.2工作流的使用方式",-1),o("p",null,"DSS工作流也有python的节点，您可以拖入工作流节点，然后双击进入然后进行编辑代码，然后以工作流的形式进行执行。",-1),o("h3",null,"3.3 Linkis Client的使用方式",-1),o("p",null,[l("Linkis也提供了client的方式进行调用spark的任务，调用的方式是通过LinkisClient提供的SDK的方式。我们提供了java和scala两种方式进行调用，具体的使用方式可以参考"),o("a",{href:"https://github.com/WeBankFinTech/Linkis/wiki/Linkis1.0%E7%94%A8%E6%88%B7%E4%BD%BF%E7%94%A8%E6%96%87%E6%A1%A3"},"https://github.com/WeBankFinTech/Linkis/wiki/Linkis1.0用户使用文档"),l("。")],-1),o("h2",null,"4.Python引擎的用户设置",-1),o("p",null,"除了以上引擎配置，用户还可以进行自定义的设置，比如python的版本和以及python需要加载的一些module等。",-1),o("p",null,[o("img",{src:n,alt:""})],-1),o("p",null,"图4-1 python的用户自定义配置管理台",-1)],d={setup:(n,{expose:o})=>(o({frontmatter:{}}),(n,o)=>(t(),e("div",y,c)))},m={setup(n){const e=i(localStorage.getItem("locale")||"en");return(n,o)=>"en"===e.value?(t(),h(u(r),{key:0})):(t(),h(u(d),{key:1}))}};export{m as default};
